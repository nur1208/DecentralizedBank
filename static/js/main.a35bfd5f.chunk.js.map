{"version":3,"sources":["Web3Client.js","dbank.png","useWeb3Client.js","App.jsx","reportWebVitals.js","index.js"],"names":["selectedAccount","dBank","token","web3","updateBalances","a","undefined","methods","balanceOf","call","localDBCBalance","eth","getBalance","localBalance","init","provider","window","ethereum","request","method","accounts","console","log","on","Web3","net","getId","networkId","address","NFTBuildContract","networks","dBankAddress","DBank","Contract","Token","abi","APP_STATUS","App","useState","depositAmount","setDepositAmount","account","setAccount","balance","setBalance","setWeb3","setDBank","setToken","setDBankAddress","DBCBalance","setDBCBalance","status","setStatus","useEffect","web3Local","tokenLocal","dBankLocal","dBankAddressLocal","handlerCallingBlackChain","functionName","sendObject","send","deposit","amount","from","value","toString","withdraw","useWeb3Client","className","href","target","rel","style","display","justifyContent","alignItems","src","dbank","alt","height","marginLeft","flexDirection","gap","Spinner","animation","role","Number","toFixed","Tabs","defaultActiveKey","id","Tab","eventKey","title","onSubmit","e","preventDefault","amountLocal","step","type","placeholder","onChange","required","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a35bfd5f.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n// import NFTBuildContract from \"./build/contracts/NFT.json\";\r\nimport NFTBuildContract from \"./abis/NFT.json\";\r\nimport Token from \"./abis/Token.json\";\r\nimport DBank from \"./abis/DBank.json\";\r\n\r\nlet selectedAccount;\r\nlet nftContract;\r\nlet dBank;\r\nlet token;\r\nlet web3;\r\n\r\nexport const updateBalances = async () => {\r\n  if (\r\n    web3 !== undefined &&\r\n    token !== null &&\r\n    token !== undefined\r\n  ) {\r\n    const localDBCBalance = await token.methods\r\n      .balanceOf(selectedAccount)\r\n      .call();\r\n\r\n    const localBalance = await web3.eth.getBalance(\r\n      selectedAccount\r\n    );\r\n    return { localDBCBalance, localBalance };\r\n  }\r\n};\r\nexport const init = async () => {\r\n  // const providerUrl =\r\n  //   process.env.PROVIDER_URL || \"http://127.0.0.1:8545\";\r\n  let provider = window.ethereum;\r\n\r\n  if (typeof provider !== \"undefined\") {\r\n    // MateMask installed\r\n\r\n    try {\r\n      const accounts = await provider.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      selectedAccount = accounts[0];\r\n\r\n      console.log(`selected account is ${selectedAccount}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n      selectedAccount = accounts[0];\r\n\r\n      console.log(\r\n        `selected account changed to ${selectedAccount}`\r\n      );\r\n    });\r\n    web3 = new Web3(provider);\r\n    const networkId = await web3.eth.net.getId();\r\n\r\n    const address = NFTBuildContract.networks[networkId].address;\r\n    const dBankAddress = DBank.networks[networkId].address;\r\n    token = new web3.eth.Contract(\r\n      Token.abi,\r\n      Token.networks[networkId].address\r\n    );\r\n\r\n    dBank = new web3.eth.Contract(DBank.abi, dBankAddress);\r\n\r\n    const { localBalance, localDBCBalance } =\r\n      await updateBalances();\r\n    nftContract = new web3.eth.Contract(\r\n      NFTBuildContract.abi,\r\n      address\r\n    );\r\n    return {\r\n      web3,\r\n      selectedAccount,\r\n      token,\r\n      dBank,\r\n      localDBCBalance,\r\n      localBalance,\r\n      dBankAddress,\r\n    };\r\n  }\r\n};\r\n\r\nexport const mintToken = () => {\r\n  return nftContract.methods\r\n    .mint(selectedAccount)\r\n    .send({ from: selectedAccount });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/dbank.49ac29b5.png\";","import { useEffect, useState } from \"react\";\r\nimport { init } from \"./Web3Client\";\r\nexport const APP_STATUS = {\r\n  RUNNING: \"RUNNING\",\r\n  CONTRACTS_LOADING: \"CONTRACTS_LOADING\",\r\n  CONTRACTS_SUCCESS: \"CONTRACTS_SUCCESS\",\r\n  CONTRACTS_FAILED: \"CONTRACTS_FAILED\",\r\n  ACTION_LOADING: \"ACTION_LOADING\",\r\n  ACTION_SUCCESS: \"ACTION_SUCCESS\",\r\n  ACTION_FAILED: \"ACTION_FAILED\",\r\n};\r\n\r\nexport const useWeb3Client = () => {\r\n  const [account, setAccount] = useState(null);\r\n  const [balance, setBalance] = useState(0);\r\n  const [web3, setWeb3] = useState(null);\r\n  const [dBank, setDBank] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [dBankAddress, setDBankAddress] = useState(\"\");\r\n  const [DBCBalance, setDBCBalance] = useState(0);\r\n  const [status, setStatus] = useState(\r\n    APP_STATUS.CONTRACTS_LOADING\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const {\r\n        web3: web3Local,\r\n        selectedAccount,\r\n        token: tokenLocal,\r\n        dBank: dBankLocal,\r\n        localDBCBalance,\r\n        localBalance,\r\n        dBankAddress: dBankAddressLocal,\r\n      } = await init();\r\n\r\n      setAccount(selectedAccount);\r\n      setBalance(localBalance);\r\n      setWeb3(web3Local);\r\n      setDBank(dBankLocal);\r\n      setToken(tokenLocal);\r\n      setDBankAddress(dBankAddressLocal);\r\n      setDBCBalance(localDBCBalance);\r\n      setStatus(APP_STATUS.RUNNING);\r\n    })();\r\n  }, []);\r\n  const handlerCallingBlackChain = async (\r\n    functionName,\r\n    sendObject\r\n  ) => {\r\n    console.log(\"handlerCallingBlackChain called\");\r\n\r\n    if (dBank !== null && dBank !== undefined) {\r\n      try {\r\n        setStatus(APP_STATUS.ACTION_LOADING);\r\n\r\n        console.log(dBank.methods);\r\n        console.log(dBank.methods[functionName]);\r\n        // await mintToken();\r\n        await dBank.methods[functionName]().send(sendObject);\r\n        const localBalance = await web3.eth.getBalance(account);\r\n        const localDBCBalance = await token.methods\r\n          .balanceOf(account)\r\n          .call();\r\n        setDBCBalance(localDBCBalance);\r\n        setStatus(APP_STATUS.ACTION_SUCCESS);\r\n        setBalance(localBalance);\r\n      } catch (error) {\r\n        console.log(`Error, ${functionName}: `, error);\r\n        setStatus(APP_STATUS.ACTION_FAILED);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deposit = async (amount) => {\r\n    console.log(\"deposit called\");\r\n    await handlerCallingBlackChain(\"deposit\", {\r\n      from: account,\r\n      value: amount.toString(),\r\n    });\r\n  };\r\n\r\n  const withdraw = async () => {\r\n    console.log(\"withdraw called\");\r\n\r\n    await handlerCallingBlackChain(\"withdraw\", {\r\n      from: account,\r\n    });\r\n  };\r\n\r\n  return [\r\n    { balance, DBCBalance, status, account },\r\n    { deposit, withdraw },\r\n  ];\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { Tabs, Tab, Spinner } from \"react-bootstrap\";\r\nimport { init, mintToken } from \"./Web3Client\";\r\nimport Token from \"./abis/Token.json\";\r\nimport DBank from \"./abis/DBank.json\";\r\n\r\nimport Web3 from \"web3\";\r\nimport dbank from \"./dbank.png\";\r\nimport { APP_STATUS, useWeb3Client } from \"./useWeb3Client\";\r\n\r\nfunction App() {\r\n  const [depositAmount, setDepositAmount] = useState(\"\");\r\n  const [\r\n    { balance, DBCBalance, status, account },\r\n    { deposit, withdraw },\r\n  ] = useWeb3Client();\r\n  // const mint = () => {};\r\n  return (\r\n    // <div className=\"App\">\r\n    //   app {balance}{\" \"}\r\n    //   <button onClick={async () => await deposit(10 ** 16)}>\r\n    //     deposit\r\n    //   </button>{\" \"}\r\n    // </div>\r\n    <div className=\"text-monospace\">\r\n      <nav className=\"navbar navbar-dark  fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n          href=\"http://www.dappuniversity.com/bootcamp\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <img\r\n              src={dbank}\r\n              className=\"App-logo\"\r\n              alt=\"logo\"\r\n              height=\"32\"\r\n            />\r\n            <b style={{ marginLeft: \"10px\" }}>d₿ank</b>\r\n          </div>\r\n        </a>\r\n      </nav>\r\n      {status === APP_STATUS.CONTRACTS_LOADING ? (\r\n        <div\r\n          // className=\"flex-md-nowrap\"\r\n          style={{\r\n            height: \"75vh\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n            gap: \"1rem\",\r\n          }}\r\n        >\r\n          <h2>loading smart contracts</h2>\r\n\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            {/* <span className=\"visually-hidden\">Loading...</span> */}\r\n          </Spinner>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"container-fluid pt-3 mt-5 text-center\"\r\n          style={{ height: \"75vh\" }}\r\n        >\r\n          <h1>Welcome to d₿ank</h1>\r\n          <h2>{account}</h2>\r\n          <div\r\n            className=\"d-flex pl-4 justify-content-center align-items-center\"\r\n            style={{ gap: \"5rem\" }}\r\n          >\r\n            <h4>\r\n              {(Number(balance) / 10 ** 18).toFixed(4)} eth\r\n            </h4>\r\n            <h4>\r\n              {(Number(DBCBalance) / 10 ** 18).toFixed(10)} DBC\r\n            </h4>\r\n          </div>\r\n          <div className=\"row\">\r\n            <main\r\n              role=\"main\"\r\n              className=\"col-lg-12 d-flex text-center\"\r\n            >\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <Tabs\r\n                  defaultActiveKey=\"profile\"\r\n                  id=\"uncontrolled-tab-example\"\r\n                >\r\n                  <Tab eventKey=\"deposit\" title=\"Deposit\">\r\n                    <div>\r\n                      <br></br>\r\n                      How much do you want to deposit?\r\n                      <br></br>\r\n                      (min. amount is 0.01 ETH)\r\n                      <br></br>\r\n                      (1 deposit is possible at the time)\r\n                      <br></br>\r\n                      <form\r\n                        onSubmit={(e) => {\r\n                          e.preventDefault();\r\n                          let amountLocal = depositAmount;\r\n                          amountLocal = amountLocal * 10 ** 18; //convert to wei\r\n                          deposit(amountLocal);\r\n                        }}\r\n                      >\r\n                        <div className=\"form-group mr-sm-2\">\r\n                          <br></br>\r\n                          <input\r\n                            id=\"depositAmount\"\r\n                            step=\"0.01\"\r\n                            type=\"number\"\r\n                            placeholder=\"amount...\"\r\n                            onChange={(e) =>\r\n                              setDepositAmount(e.target.value)\r\n                            }\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                        >\r\n                          DEPOSIT\r\n                        </button>\r\n                      </form>\r\n                    </div>\r\n                  </Tab>\r\n                  <Tab eventKey=\"withdraw\" title=\"Withdraw\">\r\n                    <br></br>\r\n                    Do you want to withdraw + take interest?\r\n                    <br></br>\r\n                    <br></br>\r\n                    <div>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={(e) => withdraw(e)}\r\n                      >\r\n                        WITHDRAW\r\n                      </button>\r\n                    </div>\r\n                  </Tab>\r\n                  {/* <Tab eventKey=\"borrow\" title=\"Borrow\">\r\n                  <div>\r\n                    <br></br>\r\n                    Do you want to borrow tokens?\r\n                    <br></br>\r\n                    (You'll get 50% of collateral, in Tokens)\r\n                    <br></br>\r\n                    Type collateral amount (in ETH)\r\n                    <br></br>\r\n                    <br></br>\r\n                    <form\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        let amount = this.borrowAmount.value;\r\n                        amount = amount * 10 ** 18; //convert to wei\r\n                        this.borrow(amount);\r\n                      }}\r\n                    >\r\n                      <div className=\"form-group mr-sm-2\">\r\n                        <input\r\n                          id=\"borrowAmount\"\r\n                          step=\"0.01\"\r\n                          type=\"number\"\r\n                          ref={(input) => {\r\n                            this.borrowAmount = input;\r\n                          }}\r\n                          className=\"form-control form-control-md\"\r\n                          placeholder=\"amount...\"\r\n                          required\r\n                        />\r\n                      </div>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        BORROW\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey=\"payOff\" title=\"Payoff\">\r\n                  <div>\r\n                    <br></br>\r\n                    Do you want to payoff the loan?\r\n                    <br></br>\r\n                    (You'll receive your collateral - fee)\r\n                    <br></br>\r\n                    <br></br>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                      onClick={(e) => this.payOff(e)}\r\n                    >\r\n                      PAYOFF\r\n                    </button>\r\n                  </div>\r\n                </Tab> */}\r\n                </Tabs>\r\n              </div>\r\n            </main>\r\n          </div>\r\n          {status === APP_STATUS.ACTION_LOADING && (\r\n            <div\r\n              className=\"mt-2\"\r\n              style={{\r\n                // height: \"75vh\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                // flexDirection: \"column\",\r\n                gap: \"1rem\",\r\n              }}\r\n            >\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                {/* <span className=\"visually-hidden\">Loading...</span> */}\r\n              </Spinner>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      <footer className=\"d-flex flex-wrap justify-content-center align-items-center py-3 my-4 border-top\">\r\n        <div>\r\n          <span>Developer: NUR</span>\r\n          <span className=\" ml-2\">\r\n            email: medo0o6665@gmail.com\r\n          </span>\r\n          <span className=\" ml-2\">github: nur1208</span>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}